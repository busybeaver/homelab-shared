name: "Repository CI"

on:
    # run on pushes to main
  push:
    branches:
      - main
      - gh-readonly-queue/main/**
  # run on pull requests that target the main branch
  pull_request:
    branches:
      - main
  # run on pull request events
  pull_request_target:
    types:
      - opened
      - synchronize
      - edited
      - reopened
      # - review_requested
    branches:
      - main
  # allows to reuse the workflow in other repositories
  workflow_call:
    secrets:
      REPOSITORY_ASSISTANT_APP_ID:
        description: The application ID of the repository assistant GitHub app
        required: true
      REPOSITORY_ASSISTANT_PRIVATE_KEY:
        description: The private key of the repository assistant GitHub app
        required: true

jobs:
  pr_auto_approve:
    name: 'Auto Approve PR'
    runs-on: ubuntu-latest

    # only auto-approve PRs that were opened by renovate or the snap-package updater (but do NOT auto approve major updates)
    if: github.event_name == 'pull_request_target' && (github.actor == 'renovate[bot]' || github.actor == 'snap-package-updater[bot]') && !contains(github.event.pull_request.labels.*.name, 'major-update')

    defaults:
      run:
        shell: bash
        working-directory: '.'

    permissions:
      contents: read

    steps:
      - name: GitHub - Generate App Token
        id: github_generate_app_token
        uses: tibdex/github-app-token@b62528385c34dbc9f38e5f4225ac829252d1ea92 # v1.8.0
        with:
          app_id: ${{ secrets.REPOSITORY_ASSISTANT_APP_ID }}
          private_key: ${{ secrets.REPOSITORY_ASSISTANT_PRIVATE_KEY }}

      - name: GitHub - Auto Approve Pull Request
        id: github_auto_approve_pr
        uses: hmarr/auto-approve-action@0902bf83c300168cda5cd6856731a0fcb0e731c2 # v3.2.0
        with:
          github-token: ${{ steps.github_generate_app_token.outputs.token }}

  pr_auto_merge:
    name: 'Enable Auto Merge PR'
    runs-on: ubuntu-latest

    # only auto-merge PRs that were opened by renovate or the snap-package updater
    if: github.event_name == 'pull_request_target' && (github.actor == 'renovate[bot]' || github.actor == 'snap-package-updater[bot]')

    defaults:
      run:
        shell: bash
        working-directory: '.'

    permissions:
      contents: read

    steps:
      - name: GitHub - Generate App Token
        id: github_generate_app_token
        uses: tibdex/github-app-token@b62528385c34dbc9f38e5f4225ac829252d1ea92 # v1.8.0
        with:
          app_id: ${{ secrets.REPOSITORY_ASSISTANT_APP_ID }}
          private_key: ${{ secrets.REPOSITORY_ASSISTANT_PRIVATE_KEY }}

      - name: GitHub - Enable PR Auto Merge
        id: github_enable_pr_auto_merge
        uses: peter-evans/enable-pull-request-automerge@684fed02ccc9b5eefcf7d40b65b3cd44255bd5bc # v2.5.0
        with:
          token: ${{ steps.github_generate_app_token.outputs.token }}
          pull-request-number: ${{ github.event.pull_request.number }}
          merge-method: squash

  semantic_pull_request:
    name: 'Semantic Pull Request Title'
    runs-on: ubuntu-latest

    # run on all pull requests
    if: github.event_name == 'pull_request_target'

    defaults:
      run:
        shell: bash
        working-directory: '.'

    permissions:
      contents: read

    steps:
      - name: GitHub - Generate App Token
        id: github_generate_app_token
        uses: tibdex/github-app-token@b62528385c34dbc9f38e5f4225ac829252d1ea92 # v1.8.0
        with:
          app_id: ${{ secrets.REPOSITORY_ASSISTANT_APP_ID }}
          private_key: ${{ secrets.REPOSITORY_ASSISTANT_PRIVATE_KEY }}

      - name: GitHub - Semantic Pull Request
        id: github_semantic_pull_request
        uses: amannn/action-semantic-pull-request@b6bca70dcd3e56e896605356ce09b76f7e1e0d39 # v5.1.0
        env:
          GITHUB_TOKEN: ${{ steps.github_generate_app_token.outputs.token }}

  conventional_commits:
    name: 'Conventional Commits Verification'
    runs-on: ubuntu-latest

    # run on all commits and pull requests

    defaults:
      run:
        shell: bash
        working-directory: '.'

    permissions:
      contents: read

    steps:
      - name: GitHub - Generate App Token
        id: github_generate_app_token
        uses: tibdex/github-app-token@b62528385c34dbc9f38e5f4225ac829252d1ea92 # v1.8.0
        with:
          app_id: ${{ secrets.REPOSITORY_ASSISTANT_APP_ID }}
          private_key: ${{ secrets.REPOSITORY_ASSISTANT_PRIVATE_KEY }}

      - name: GitHub - Conventional Commit Messages
        id: github_conventional_commit_messages
        uses: gsactions/commit-message-checker@16fa2d5de096ae0d35626443bcd24f1e756cafee # v2.0.0
        with:
          pattern: ^(?:Merge branch \')|(?:(?:feat|fix|build|chore|ci|docs|style|refactor|perf|test)(?:\((?:\w|\s|\-|_)+\))?(?:!)?:\s\w+)
          error: 'The commit message title did not follow the conventional commits specification'
          excludeDescription: 'true' # excludes the description body of a pull request
          excludeTitle: 'true' # excludes the title of a pull request
          checkAllCommitMessages: 'true' # check all commits associated with a pull request
          accessToken: ${{ steps.github_generate_app_token.outputs.token }}
