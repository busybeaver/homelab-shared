name: 'General CI'

on:
  # run on pushes to main
  push:
    branches:
      - main
      - gh-readonly-queue/main/**
  # run on pull requests that target the main branch
  pull_request:
    branches:
      - main
  # run weekly on Monday at 12:00
  schedule:
    - cron: '0 12 * * 1'
  # allows to reuse the workflow in other repositories
  workflow_call:
    secrets:
      GITHUB_TOKEN:
        # necessary permissions: 'contents: read' and 'statuses: write'
        required: true
      GITGUARDIAN_API_KEY:
        required: true

concurrency:
  # on main, we want all builds to complete even if commits/merging happens faster to make it easier to discover at which point
  # something broke; else, we cancel "old" builds and run/(re)start the build with the latest changes
  group: ${{ github.ref == 'refs/heads/main' && format('ci-main-{0}-{1}', github.workflow, github.sha) || format('ci-{0}-{1}', github.workflow, github.ref) }}

jobs:
  code_quality:
    name: 'Code Quality Checks'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: '.'

    permissions:
      contents: read
      statuses: write

    steps:
      - name: Git - Checkout
        id: git_checkout
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # tag=v3
        with:
          # Checkout full git history; required by git-leaks
          fetch-depth: 0

      - name: SuperLinter - Lint Files
        id: superlinter_scan
        uses: github/super-linter/slim@ae4e373c56efad95924d9cc6b89624fdb2333007 # tag=v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
          VALIDATE_ALL_CODEBASE: ${{ github.event_name != 'pull_request' }}
          VALIDATE_BASH: true
          VALIDATE_EDITORCONFIG: true
          VALIDATE_GITHUB_ACTIONS: true
          VALIDATE_GITLEAKS: true
          VALIDATE_JSON: true
          VALIDATE_MARKDOWN: true
          VALIDATE_NATURAL_LANGUAGE: true
          VALIDATE_SHELL_SHFMT: true
          VALIDATE_YAML: true

  git_secrets:
    name: 'Git Secret Exposure Checks'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: '.'

    permissions:
      contents: read
      statuses: write

    steps:
      - name: Git - Checkout
        id: git_checkout
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # tag=v3
        with:
          # Checkout full git history; required by GitGuardian
          fetch-depth: 0

      - name: GitGuardian - Scan For Commited Secrets
        id: gitguardian_scan
        uses: GitGuardian/ggshield-action@a5226e0a63850e276df1c71a81129fb82fc6e8cc # renovate: tag=v1.1.0
        env:
          GITHUB_PUSH_BEFORE_SHA: ${{ github.event.before }}
          GITHUB_PUSH_BASE_SHA: ${{ github.event.base }}
          GITHUB_PULL_BASE_SHA: ${{ github.event.pull_request.base.sha }}
          GITHUB_DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
          GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}
